#include <stdio.h>

void bfs(int adj[][10], int visited[], int start, int size) {
    int queue[10], rear = -1, front = -1, i;

    for (i = 0; i < size; i++) {
        visited[i] = 0;
    }

    queue[++rear] = start;
    ++front;
    visited[start] = 1;

    printf("BFS Traversal: ");
    while (rear >= front) {
        start = queue[front++];
        printf("%d->", start);

        for (i = 0; i < size; i++) {
            if (adj[start][i] && visited[i] == 0) {
                queue[++rear] = i;
                visited[i] = 1;
            }
        }
    }
    printf("NULL\n");
}

int main() {
    int adj[10][10], visited[10], i, j, max, option;

    printf("Enter number of vertices in the graph (max 10): ");
    scanf("%d", &max);

    if (max > 10 || max <= 0) {
        printf("Invalid size entered.\n");
        return 0;
    }

    do {
        printf("\nMenu:\n");
        printf("1. Enter values of graph\n");
        printf("2. BFS traversal\n");
        printf("3. Exit\n");

        printf("\nEnter your choice: ");
        scanf("%d", &option);

        switch (option) {
            case 1:
                printf("Enter the adjacency matrix:\n");
                for (i = 0; i < max; i++) {
                    for (j = 0; j < max; j++) {
                        scanf("%d", &adj[i][j]);
                    }
                }
                break;

            case 2:
                bfs(adj, visited, 0, max);
                break;

            case 3:
                printf("Exiting...\n");
                break;

            default:
                printf("Invalid option!\n");
                break;
        }
    } while (option != 3);

    return 0;
}
