#include <stdio.h>
#include <stdlib.h>

int isFull(int front, int rear, int max) {
    return (front == (rear + 1) % max);
}

int isEmpty(int front) {
    return front == -1;
}

void enqueue(int queue[], int *front, int *rear, int value, int max) {
    if (isFull(*front, *rear, max)) {
        printf("Queue is full!\n");
    } else {
        if (*front == -1) // First insertion
            *front = 0;
        *rear = (*rear + 1) % max;
        queue[*rear] = value;
        printf("Inserted %d\n", value);
    }
}

void dequeue(int queue[], int *front, int *rear) {
    if (isEmpty(*front)) {
        printf("Queue is empty!\n");
    } else {
        printf("Deleted %d\n", queue[*front]);
        if (*front == *rear) { // Queue has only one element
            *front = -1;
            *rear = -1;
        } else {
            *front = (*front + 1) % (rear - front + 1); 
        }
    }
}

void display(int queue[], int front, int rear, int max) {
    if (isEmpty(front)) {
        printf("Queue is empty!\n");
    } else {
        printf("Queue elements are: ");
        int i = front;
        while (i != rear) {
            printf("%d ", queue[i]);
            i = (i + 1) % max;
        }
        printf("%d\n", queue[i]); // Display last element
    }
}

int main() {
    int max = 5;
    int queue[max];
    int front = -1, rear = -1;
    int choice, value;

    while (1) {
        printf("\nCircular Queue Menu:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: // Enqueue
                printf("Enter value to insert: ");
                scanf("%d", &value);
                enqueue(queue, &front, &rear, value, max);
                break;

            case 2: // Dequeue
                dequeue(queue, &front, &rear);
                break;

            case 3: // Display
                display(queue, front, rear, max);
                break;

            case 4: // Exit
                printf("Exiting...\n");
                exit(0);
                break;

            default:
                printf("Invalid choice! Please try again.\n");
        }
    }
    return 0;
}
